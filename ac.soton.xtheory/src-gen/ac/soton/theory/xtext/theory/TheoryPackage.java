/**
 * generated by Xtext 2.14.0
 */
package ac.soton.theory.xtext.theory;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EEnum;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

/**
 * <!-- begin-user-doc -->
 * The <b>Package</b> for the model.
 * It contains accessors for the meta objects to represent
 * <ul>
 *   <li>each class,</li>
 *   <li>each feature of each class,</li>
 *   <li>each enum,</li>
 *   <li>and each data type</li>
 * </ul>
 * <!-- end-user-doc -->
 * @see ac.soton.theory.xtext.theory.TheoryFactory
 * @model kind="package"
 * @generated
 */
public interface TheoryPackage extends EPackage
{
  /**
   * The package name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNAME = "theory";

  /**
   * The package namespace URI.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_URI = "http://www.soton.ac/xtheory/Theory";

  /**
   * The package namespace name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_PREFIX = "theory";

  /**
   * The singleton instance of the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  TheoryPackage eINSTANCE = ac.soton.theory.xtext.theory.impl.TheoryPackageImpl.init();

  /**
   * The meta object id for the '{@link ac.soton.theory.xtext.theory.impl.TheoryImpl <em>Theory</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see ac.soton.theory.xtext.theory.impl.TheoryImpl
   * @see ac.soton.theory.xtext.theory.impl.TheoryPackageImpl#getTheory()
   * @generated
   */
  int THEORY = 0;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int THEORY__NAME = 0;

  /**
   * The feature id for the '<em><b>Parameters</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int THEORY__PARAMETERS = 1;

  /**
   * The feature id for the '<em><b>Imports</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int THEORY__IMPORTS = 2;

  /**
   * The feature id for the '<em><b>Types</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int THEORY__TYPES = 3;

  /**
   * The feature id for the '<em><b>Operators</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int THEORY__OPERATORS = 4;

  /**
   * The feature id for the '<em><b>Axioms</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int THEORY__AXIOMS = 5;

  /**
   * The feature id for the '<em><b>Variables</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int THEORY__VARIABLES = 6;

  /**
   * The feature id for the '<em><b>Rules</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int THEORY__RULES = 7;

  /**
   * The number of structural features of the '<em>Theory</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int THEORY_FEATURE_COUNT = 8;

  /**
   * The meta object id for the '{@link ac.soton.theory.xtext.theory.impl.ParameterImpl <em>Parameter</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see ac.soton.theory.xtext.theory.impl.ParameterImpl
   * @see ac.soton.theory.xtext.theory.impl.TheoryPackageImpl#getParameter()
   * @generated
   */
  int PARAMETER = 1;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PARAMETER__NAME = 0;

  /**
   * The number of structural features of the '<em>Parameter</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PARAMETER_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link ac.soton.theory.xtext.theory.impl.TypeImpl <em>Type</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see ac.soton.theory.xtext.theory.impl.TypeImpl
   * @see ac.soton.theory.xtext.theory.impl.TheoryPackageImpl#getType()
   * @generated
   */
  int TYPE = 2;

  /**
   * The feature id for the '<em><b>Comments</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TYPE__COMMENTS = 0;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TYPE__NAME = 1;

  /**
   * The feature id for the '<em><b>Parameters</b></em>' reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TYPE__PARAMETERS = 2;

  /**
   * The feature id for the '<em><b>Constructors</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TYPE__CONSTRUCTORS = 3;

  /**
   * The number of structural features of the '<em>Type</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TYPE_FEATURE_COUNT = 4;

  /**
   * The meta object id for the '{@link ac.soton.theory.xtext.theory.impl.ConstructorImpl <em>Constructor</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see ac.soton.theory.xtext.theory.impl.ConstructorImpl
   * @see ac.soton.theory.xtext.theory.impl.TheoryPackageImpl#getConstructor()
   * @generated
   */
  int CONSTRUCTOR = 3;

  /**
   * The feature id for the '<em><b>Comments</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONSTRUCTOR__COMMENTS = 0;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONSTRUCTOR__NAME = 1;

  /**
   * The feature id for the '<em><b>Destructors</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONSTRUCTOR__DESTRUCTORS = 2;

  /**
   * The number of structural features of the '<em>Constructor</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONSTRUCTOR_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link ac.soton.theory.xtext.theory.impl.DestructorImpl <em>Destructor</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see ac.soton.theory.xtext.theory.impl.DestructorImpl
   * @see ac.soton.theory.xtext.theory.impl.TheoryPackageImpl#getDestructor()
   * @generated
   */
  int DESTRUCTOR = 4;

  /**
   * The feature id for the '<em><b>Comments</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DESTRUCTOR__COMMENTS = 0;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DESTRUCTOR__NAME = 1;

  /**
   * The feature id for the '<em><b>Type</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DESTRUCTOR__TYPE = 2;

  /**
   * The number of structural features of the '<em>Destructor</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DESTRUCTOR_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link ac.soton.theory.xtext.theory.impl.OperatorImpl <em>Operator</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see ac.soton.theory.xtext.theory.impl.OperatorImpl
   * @see ac.soton.theory.xtext.theory.impl.TheoryPackageImpl#getOperator()
   * @generated
   */
  int OPERATOR = 5;

  /**
   * The feature id for the '<em><b>Comments</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OPERATOR__COMMENTS = 0;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OPERATOR__NAME = 1;

  /**
   * The feature id for the '<em><b>Arguments</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OPERATOR__ARGUMENTS = 2;

  /**
   * The feature id for the '<em><b>Type</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OPERATOR__TYPE = 3;

  /**
   * The feature id for the '<em><b>Notation</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OPERATOR__NOTATION = 4;

  /**
   * The feature id for the '<em><b>Associtive</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OPERATOR__ASSOCITIVE = 5;

  /**
   * The feature id for the '<em><b>Commutative</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OPERATOR__COMMUTATIVE = 6;

  /**
   * The feature id for the '<em><b>Precedent</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OPERATOR__PRECEDENT = 7;

  /**
   * The feature id for the '<em><b>Wd</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OPERATOR__WD = 8;

  /**
   * The feature id for the '<em><b>Definition</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OPERATOR__DEFINITION = 9;

  /**
   * The feature id for the '<em><b>Case</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OPERATOR__CASE = 10;

  /**
   * The feature id for the '<em><b>Cases</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OPERATOR__CASES = 11;

  /**
   * The number of structural features of the '<em>Operator</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OPERATOR_FEATURE_COUNT = 12;

  /**
   * The meta object id for the '{@link ac.soton.theory.xtext.theory.impl.ArgumentImpl <em>Argument</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see ac.soton.theory.xtext.theory.impl.ArgumentImpl
   * @see ac.soton.theory.xtext.theory.impl.TheoryPackageImpl#getArgument()
   * @generated
   */
  int ARGUMENT = 6;

  /**
   * The feature id for the '<em><b>Comments</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ARGUMENT__COMMENTS = 0;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ARGUMENT__NAME = 1;

  /**
   * The feature id for the '<em><b>Type</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ARGUMENT__TYPE = 2;

  /**
   * The number of structural features of the '<em>Argument</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ARGUMENT_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link ac.soton.theory.xtext.theory.impl.CaseImpl <em>Case</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see ac.soton.theory.xtext.theory.impl.CaseImpl
   * @see ac.soton.theory.xtext.theory.impl.TheoryPackageImpl#getCase()
   * @generated
   */
  int CASE = 7;

  /**
   * The feature id for the '<em><b>Pattern</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CASE__PATTERN = 0;

  /**
   * The feature id for the '<em><b>Formula</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CASE__FORMULA = 1;

  /**
   * The number of structural features of the '<em>Case</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CASE_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link ac.soton.theory.xtext.theory.impl.AxiomImpl <em>Axiom</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see ac.soton.theory.xtext.theory.impl.AxiomImpl
   * @see ac.soton.theory.xtext.theory.impl.TheoryPackageImpl#getAxiom()
   * @generated
   */
  int AXIOM = 8;

  /**
   * The feature id for the '<em><b>Comments</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int AXIOM__COMMENTS = 0;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int AXIOM__NAME = 1;

  /**
   * The feature id for the '<em><b>Predicate</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int AXIOM__PREDICATE = 2;

  /**
   * The feature id for the '<em><b>Is Theorem</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int AXIOM__IS_THEOREM = 3;

  /**
   * The number of structural features of the '<em>Axiom</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int AXIOM_FEATURE_COUNT = 4;

  /**
   * The meta object id for the '{@link ac.soton.theory.xtext.theory.impl.VariableImpl <em>Variable</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see ac.soton.theory.xtext.theory.impl.VariableImpl
   * @see ac.soton.theory.xtext.theory.impl.TheoryPackageImpl#getVariable()
   * @generated
   */
  int VARIABLE = 9;

  /**
   * The feature id for the '<em><b>Comments</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLE__COMMENTS = 0;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLE__NAME = 1;

  /**
   * The feature id for the '<em><b>Type</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLE__TYPE = 2;

  /**
   * The number of structural features of the '<em>Variable</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLE_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link ac.soton.theory.xtext.theory.impl.RuleImpl <em>Rule</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see ac.soton.theory.xtext.theory.impl.RuleImpl
   * @see ac.soton.theory.xtext.theory.impl.TheoryPackageImpl#getRule()
   * @generated
   */
  int RULE = 10;

  /**
   * The feature id for the '<em><b>Comments</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RULE__COMMENTS = 0;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RULE__NAME = 1;

  /**
   * The feature id for the '<em><b>Rule</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RULE__RULE = 2;

  /**
   * The number of structural features of the '<em>Rule</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RULE_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link ac.soton.theory.xtext.theory.impl.RewriteRuleImpl <em>Rewrite Rule</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see ac.soton.theory.xtext.theory.impl.RewriteRuleImpl
   * @see ac.soton.theory.xtext.theory.impl.TheoryPackageImpl#getRewriteRule()
   * @generated
   */
  int REWRITE_RULE = 11;

  /**
   * The feature id for the '<em><b>Pattern</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int REWRITE_RULE__PATTERN = 0;

  /**
   * The feature id for the '<em><b>Rule</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int REWRITE_RULE__RULE = 1;

  /**
   * The number of structural features of the '<em>Rewrite Rule</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int REWRITE_RULE_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link ac.soton.theory.xtext.theory.impl.InferenceRuleImpl <em>Inference Rule</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see ac.soton.theory.xtext.theory.impl.InferenceRuleImpl
   * @see ac.soton.theory.xtext.theory.impl.TheoryPackageImpl#getInferenceRule()
   * @generated
   */
  int INFERENCE_RULE = 12;

  /**
   * The feature id for the '<em><b>Given</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INFERENCE_RULE__GIVEN = 0;

  /**
   * The feature id for the '<em><b>Infer</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INFERENCE_RULE__INFER = 1;

  /**
   * The number of structural features of the '<em>Inference Rule</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INFERENCE_RULE_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link ac.soton.theory.xtext.theory.impl.GivenImpl <em>Given</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see ac.soton.theory.xtext.theory.impl.GivenImpl
   * @see ac.soton.theory.xtext.theory.impl.TheoryPackageImpl#getGiven()
   * @generated
   */
  int GIVEN = 13;

  /**
   * The feature id for the '<em><b>Predicate</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int GIVEN__PREDICATE = 0;

  /**
   * The feature id for the '<em><b>Required</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int GIVEN__REQUIRED = 1;

  /**
   * The number of structural features of the '<em>Given</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int GIVEN_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link ac.soton.theory.xtext.theory.impl.InferImpl <em>Infer</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see ac.soton.theory.xtext.theory.impl.InferImpl
   * @see ac.soton.theory.xtext.theory.impl.TheoryPackageImpl#getInfer()
   * @generated
   */
  int INFER = 14;

  /**
   * The feature id for the '<em><b>Predicate</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INFER__PREDICATE = 0;

  /**
   * The number of structural features of the '<em>Infer</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INFER_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link ac.soton.theory.xtext.theory.impl.UnconditionalRewriteImpl <em>Unconditional Rewrite</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see ac.soton.theory.xtext.theory.impl.UnconditionalRewriteImpl
   * @see ac.soton.theory.xtext.theory.impl.TheoryPackageImpl#getUnconditionalRewrite()
   * @generated
   */
  int UNCONDITIONAL_REWRITE = 15;

  /**
   * The feature id for the '<em><b>Rhs</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int UNCONDITIONAL_REWRITE__RHS = 0;

  /**
   * The number of structural features of the '<em>Unconditional Rewrite</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int UNCONDITIONAL_REWRITE_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link ac.soton.theory.xtext.theory.impl.ConditionalRewriteImpl <em>Conditional Rewrite</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see ac.soton.theory.xtext.theory.impl.ConditionalRewriteImpl
   * @see ac.soton.theory.xtext.theory.impl.TheoryPackageImpl#getConditionalRewrite()
   * @generated
   */
  int CONDITIONAL_REWRITE = 16;

  /**
   * The feature id for the '<em><b>Rewrites</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONDITIONAL_REWRITE__REWRITES = 0;

  /**
   * The number of structural features of the '<em>Conditional Rewrite</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONDITIONAL_REWRITE_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link ac.soton.theory.xtext.theory.impl.ConditionalRewriteRuleImpl <em>Conditional Rewrite Rule</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see ac.soton.theory.xtext.theory.impl.ConditionalRewriteRuleImpl
   * @see ac.soton.theory.xtext.theory.impl.TheoryPackageImpl#getConditionalRewriteRule()
   * @generated
   */
  int CONDITIONAL_REWRITE_RULE = 17;

  /**
   * The feature id for the '<em><b>Lsh</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONDITIONAL_REWRITE_RULE__LSH = 0;

  /**
   * The feature id for the '<em><b>Rhs</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONDITIONAL_REWRITE_RULE__RHS = 1;

  /**
   * The number of structural features of the '<em>Conditional Rewrite Rule</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONDITIONAL_REWRITE_RULE_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link ac.soton.theory.xtext.theory.Notation <em>Notation</em>}' enum.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see ac.soton.theory.xtext.theory.Notation
   * @see ac.soton.theory.xtext.theory.impl.TheoryPackageImpl#getNotation()
   * @generated
   */
  int NOTATION = 18;


  /**
   * Returns the meta object for class '{@link ac.soton.theory.xtext.theory.Theory <em>Theory</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Theory</em>'.
   * @see ac.soton.theory.xtext.theory.Theory
   * @generated
   */
  EClass getTheory();

  /**
   * Returns the meta object for the attribute '{@link ac.soton.theory.xtext.theory.Theory#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see ac.soton.theory.xtext.theory.Theory#getName()
   * @see #getTheory()
   * @generated
   */
  EAttribute getTheory_Name();

  /**
   * Returns the meta object for the containment reference list '{@link ac.soton.theory.xtext.theory.Theory#getParameters <em>Parameters</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Parameters</em>'.
   * @see ac.soton.theory.xtext.theory.Theory#getParameters()
   * @see #getTheory()
   * @generated
   */
  EReference getTheory_Parameters();

  /**
   * Returns the meta object for the attribute list '{@link ac.soton.theory.xtext.theory.Theory#getImports <em>Imports</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute list '<em>Imports</em>'.
   * @see ac.soton.theory.xtext.theory.Theory#getImports()
   * @see #getTheory()
   * @generated
   */
  EAttribute getTheory_Imports();

  /**
   * Returns the meta object for the containment reference list '{@link ac.soton.theory.xtext.theory.Theory#getTypes <em>Types</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Types</em>'.
   * @see ac.soton.theory.xtext.theory.Theory#getTypes()
   * @see #getTheory()
   * @generated
   */
  EReference getTheory_Types();

  /**
   * Returns the meta object for the containment reference list '{@link ac.soton.theory.xtext.theory.Theory#getOperators <em>Operators</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Operators</em>'.
   * @see ac.soton.theory.xtext.theory.Theory#getOperators()
   * @see #getTheory()
   * @generated
   */
  EReference getTheory_Operators();

  /**
   * Returns the meta object for the containment reference list '{@link ac.soton.theory.xtext.theory.Theory#getAxioms <em>Axioms</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Axioms</em>'.
   * @see ac.soton.theory.xtext.theory.Theory#getAxioms()
   * @see #getTheory()
   * @generated
   */
  EReference getTheory_Axioms();

  /**
   * Returns the meta object for the containment reference list '{@link ac.soton.theory.xtext.theory.Theory#getVariables <em>Variables</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Variables</em>'.
   * @see ac.soton.theory.xtext.theory.Theory#getVariables()
   * @see #getTheory()
   * @generated
   */
  EReference getTheory_Variables();

  /**
   * Returns the meta object for the containment reference list '{@link ac.soton.theory.xtext.theory.Theory#getRules <em>Rules</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Rules</em>'.
   * @see ac.soton.theory.xtext.theory.Theory#getRules()
   * @see #getTheory()
   * @generated
   */
  EReference getTheory_Rules();

  /**
   * Returns the meta object for class '{@link ac.soton.theory.xtext.theory.Parameter <em>Parameter</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Parameter</em>'.
   * @see ac.soton.theory.xtext.theory.Parameter
   * @generated
   */
  EClass getParameter();

  /**
   * Returns the meta object for the attribute '{@link ac.soton.theory.xtext.theory.Parameter#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see ac.soton.theory.xtext.theory.Parameter#getName()
   * @see #getParameter()
   * @generated
   */
  EAttribute getParameter_Name();

  /**
   * Returns the meta object for class '{@link ac.soton.theory.xtext.theory.Type <em>Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Type</em>'.
   * @see ac.soton.theory.xtext.theory.Type
   * @generated
   */
  EClass getType();

  /**
   * Returns the meta object for the attribute '{@link ac.soton.theory.xtext.theory.Type#getComments <em>Comments</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Comments</em>'.
   * @see ac.soton.theory.xtext.theory.Type#getComments()
   * @see #getType()
   * @generated
   */
  EAttribute getType_Comments();

  /**
   * Returns the meta object for the attribute '{@link ac.soton.theory.xtext.theory.Type#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see ac.soton.theory.xtext.theory.Type#getName()
   * @see #getType()
   * @generated
   */
  EAttribute getType_Name();

  /**
   * Returns the meta object for the reference list '{@link ac.soton.theory.xtext.theory.Type#getParameters <em>Parameters</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference list '<em>Parameters</em>'.
   * @see ac.soton.theory.xtext.theory.Type#getParameters()
   * @see #getType()
   * @generated
   */
  EReference getType_Parameters();

  /**
   * Returns the meta object for the containment reference list '{@link ac.soton.theory.xtext.theory.Type#getConstructors <em>Constructors</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Constructors</em>'.
   * @see ac.soton.theory.xtext.theory.Type#getConstructors()
   * @see #getType()
   * @generated
   */
  EReference getType_Constructors();

  /**
   * Returns the meta object for class '{@link ac.soton.theory.xtext.theory.Constructor <em>Constructor</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Constructor</em>'.
   * @see ac.soton.theory.xtext.theory.Constructor
   * @generated
   */
  EClass getConstructor();

  /**
   * Returns the meta object for the attribute '{@link ac.soton.theory.xtext.theory.Constructor#getComments <em>Comments</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Comments</em>'.
   * @see ac.soton.theory.xtext.theory.Constructor#getComments()
   * @see #getConstructor()
   * @generated
   */
  EAttribute getConstructor_Comments();

  /**
   * Returns the meta object for the attribute '{@link ac.soton.theory.xtext.theory.Constructor#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see ac.soton.theory.xtext.theory.Constructor#getName()
   * @see #getConstructor()
   * @generated
   */
  EAttribute getConstructor_Name();

  /**
   * Returns the meta object for the containment reference list '{@link ac.soton.theory.xtext.theory.Constructor#getDestructors <em>Destructors</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Destructors</em>'.
   * @see ac.soton.theory.xtext.theory.Constructor#getDestructors()
   * @see #getConstructor()
   * @generated
   */
  EReference getConstructor_Destructors();

  /**
   * Returns the meta object for class '{@link ac.soton.theory.xtext.theory.Destructor <em>Destructor</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Destructor</em>'.
   * @see ac.soton.theory.xtext.theory.Destructor
   * @generated
   */
  EClass getDestructor();

  /**
   * Returns the meta object for the attribute '{@link ac.soton.theory.xtext.theory.Destructor#getComments <em>Comments</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Comments</em>'.
   * @see ac.soton.theory.xtext.theory.Destructor#getComments()
   * @see #getDestructor()
   * @generated
   */
  EAttribute getDestructor_Comments();

  /**
   * Returns the meta object for the attribute '{@link ac.soton.theory.xtext.theory.Destructor#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see ac.soton.theory.xtext.theory.Destructor#getName()
   * @see #getDestructor()
   * @generated
   */
  EAttribute getDestructor_Name();

  /**
   * Returns the meta object for the attribute '{@link ac.soton.theory.xtext.theory.Destructor#getType <em>Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Type</em>'.
   * @see ac.soton.theory.xtext.theory.Destructor#getType()
   * @see #getDestructor()
   * @generated
   */
  EAttribute getDestructor_Type();

  /**
   * Returns the meta object for class '{@link ac.soton.theory.xtext.theory.Operator <em>Operator</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Operator</em>'.
   * @see ac.soton.theory.xtext.theory.Operator
   * @generated
   */
  EClass getOperator();

  /**
   * Returns the meta object for the attribute '{@link ac.soton.theory.xtext.theory.Operator#getComments <em>Comments</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Comments</em>'.
   * @see ac.soton.theory.xtext.theory.Operator#getComments()
   * @see #getOperator()
   * @generated
   */
  EAttribute getOperator_Comments();

  /**
   * Returns the meta object for the attribute '{@link ac.soton.theory.xtext.theory.Operator#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see ac.soton.theory.xtext.theory.Operator#getName()
   * @see #getOperator()
   * @generated
   */
  EAttribute getOperator_Name();

  /**
   * Returns the meta object for the containment reference list '{@link ac.soton.theory.xtext.theory.Operator#getArguments <em>Arguments</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Arguments</em>'.
   * @see ac.soton.theory.xtext.theory.Operator#getArguments()
   * @see #getOperator()
   * @generated
   */
  EReference getOperator_Arguments();

  /**
   * Returns the meta object for the attribute '{@link ac.soton.theory.xtext.theory.Operator#getType <em>Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Type</em>'.
   * @see ac.soton.theory.xtext.theory.Operator#getType()
   * @see #getOperator()
   * @generated
   */
  EAttribute getOperator_Type();

  /**
   * Returns the meta object for the attribute '{@link ac.soton.theory.xtext.theory.Operator#getNotation <em>Notation</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Notation</em>'.
   * @see ac.soton.theory.xtext.theory.Operator#getNotation()
   * @see #getOperator()
   * @generated
   */
  EAttribute getOperator_Notation();

  /**
   * Returns the meta object for the attribute '{@link ac.soton.theory.xtext.theory.Operator#isAssocitive <em>Associtive</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Associtive</em>'.
   * @see ac.soton.theory.xtext.theory.Operator#isAssocitive()
   * @see #getOperator()
   * @generated
   */
  EAttribute getOperator_Associtive();

  /**
   * Returns the meta object for the attribute '{@link ac.soton.theory.xtext.theory.Operator#isCommutative <em>Commutative</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Commutative</em>'.
   * @see ac.soton.theory.xtext.theory.Operator#isCommutative()
   * @see #getOperator()
   * @generated
   */
  EAttribute getOperator_Commutative();

  /**
   * Returns the meta object for the attribute '{@link ac.soton.theory.xtext.theory.Operator#getPrecedent <em>Precedent</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Precedent</em>'.
   * @see ac.soton.theory.xtext.theory.Operator#getPrecedent()
   * @see #getOperator()
   * @generated
   */
  EAttribute getOperator_Precedent();

  /**
   * Returns the meta object for the attribute '{@link ac.soton.theory.xtext.theory.Operator#getWd <em>Wd</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Wd</em>'.
   * @see ac.soton.theory.xtext.theory.Operator#getWd()
   * @see #getOperator()
   * @generated
   */
  EAttribute getOperator_Wd();

  /**
   * Returns the meta object for the attribute '{@link ac.soton.theory.xtext.theory.Operator#getDefinition <em>Definition</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Definition</em>'.
   * @see ac.soton.theory.xtext.theory.Operator#getDefinition()
   * @see #getOperator()
   * @generated
   */
  EAttribute getOperator_Definition();

  /**
   * Returns the meta object for the attribute '{@link ac.soton.theory.xtext.theory.Operator#getCase <em>Case</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Case</em>'.
   * @see ac.soton.theory.xtext.theory.Operator#getCase()
   * @see #getOperator()
   * @generated
   */
  EAttribute getOperator_Case();

  /**
   * Returns the meta object for the containment reference list '{@link ac.soton.theory.xtext.theory.Operator#getCases <em>Cases</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Cases</em>'.
   * @see ac.soton.theory.xtext.theory.Operator#getCases()
   * @see #getOperator()
   * @generated
   */
  EReference getOperator_Cases();

  /**
   * Returns the meta object for class '{@link ac.soton.theory.xtext.theory.Argument <em>Argument</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Argument</em>'.
   * @see ac.soton.theory.xtext.theory.Argument
   * @generated
   */
  EClass getArgument();

  /**
   * Returns the meta object for the attribute '{@link ac.soton.theory.xtext.theory.Argument#getComments <em>Comments</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Comments</em>'.
   * @see ac.soton.theory.xtext.theory.Argument#getComments()
   * @see #getArgument()
   * @generated
   */
  EAttribute getArgument_Comments();

  /**
   * Returns the meta object for the attribute '{@link ac.soton.theory.xtext.theory.Argument#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see ac.soton.theory.xtext.theory.Argument#getName()
   * @see #getArgument()
   * @generated
   */
  EAttribute getArgument_Name();

  /**
   * Returns the meta object for the attribute '{@link ac.soton.theory.xtext.theory.Argument#getType <em>Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Type</em>'.
   * @see ac.soton.theory.xtext.theory.Argument#getType()
   * @see #getArgument()
   * @generated
   */
  EAttribute getArgument_Type();

  /**
   * Returns the meta object for class '{@link ac.soton.theory.xtext.theory.Case <em>Case</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Case</em>'.
   * @see ac.soton.theory.xtext.theory.Case
   * @generated
   */
  EClass getCase();

  /**
   * Returns the meta object for the attribute '{@link ac.soton.theory.xtext.theory.Case#getPattern <em>Pattern</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Pattern</em>'.
   * @see ac.soton.theory.xtext.theory.Case#getPattern()
   * @see #getCase()
   * @generated
   */
  EAttribute getCase_Pattern();

  /**
   * Returns the meta object for the attribute '{@link ac.soton.theory.xtext.theory.Case#getFormula <em>Formula</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Formula</em>'.
   * @see ac.soton.theory.xtext.theory.Case#getFormula()
   * @see #getCase()
   * @generated
   */
  EAttribute getCase_Formula();

  /**
   * Returns the meta object for class '{@link ac.soton.theory.xtext.theory.Axiom <em>Axiom</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Axiom</em>'.
   * @see ac.soton.theory.xtext.theory.Axiom
   * @generated
   */
  EClass getAxiom();

  /**
   * Returns the meta object for the attribute '{@link ac.soton.theory.xtext.theory.Axiom#getComments <em>Comments</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Comments</em>'.
   * @see ac.soton.theory.xtext.theory.Axiom#getComments()
   * @see #getAxiom()
   * @generated
   */
  EAttribute getAxiom_Comments();

  /**
   * Returns the meta object for the attribute '{@link ac.soton.theory.xtext.theory.Axiom#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see ac.soton.theory.xtext.theory.Axiom#getName()
   * @see #getAxiom()
   * @generated
   */
  EAttribute getAxiom_Name();

  /**
   * Returns the meta object for the attribute '{@link ac.soton.theory.xtext.theory.Axiom#getPredicate <em>Predicate</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Predicate</em>'.
   * @see ac.soton.theory.xtext.theory.Axiom#getPredicate()
   * @see #getAxiom()
   * @generated
   */
  EAttribute getAxiom_Predicate();

  /**
   * Returns the meta object for the attribute '{@link ac.soton.theory.xtext.theory.Axiom#isIsTheorem <em>Is Theorem</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Is Theorem</em>'.
   * @see ac.soton.theory.xtext.theory.Axiom#isIsTheorem()
   * @see #getAxiom()
   * @generated
   */
  EAttribute getAxiom_IsTheorem();

  /**
   * Returns the meta object for class '{@link ac.soton.theory.xtext.theory.Variable <em>Variable</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Variable</em>'.
   * @see ac.soton.theory.xtext.theory.Variable
   * @generated
   */
  EClass getVariable();

  /**
   * Returns the meta object for the attribute '{@link ac.soton.theory.xtext.theory.Variable#getComments <em>Comments</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Comments</em>'.
   * @see ac.soton.theory.xtext.theory.Variable#getComments()
   * @see #getVariable()
   * @generated
   */
  EAttribute getVariable_Comments();

  /**
   * Returns the meta object for the attribute '{@link ac.soton.theory.xtext.theory.Variable#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see ac.soton.theory.xtext.theory.Variable#getName()
   * @see #getVariable()
   * @generated
   */
  EAttribute getVariable_Name();

  /**
   * Returns the meta object for the attribute '{@link ac.soton.theory.xtext.theory.Variable#getType <em>Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Type</em>'.
   * @see ac.soton.theory.xtext.theory.Variable#getType()
   * @see #getVariable()
   * @generated
   */
  EAttribute getVariable_Type();

  /**
   * Returns the meta object for class '{@link ac.soton.theory.xtext.theory.Rule <em>Rule</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Rule</em>'.
   * @see ac.soton.theory.xtext.theory.Rule
   * @generated
   */
  EClass getRule();

  /**
   * Returns the meta object for the attribute '{@link ac.soton.theory.xtext.theory.Rule#getComments <em>Comments</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Comments</em>'.
   * @see ac.soton.theory.xtext.theory.Rule#getComments()
   * @see #getRule()
   * @generated
   */
  EAttribute getRule_Comments();

  /**
   * Returns the meta object for the attribute '{@link ac.soton.theory.xtext.theory.Rule#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see ac.soton.theory.xtext.theory.Rule#getName()
   * @see #getRule()
   * @generated
   */
  EAttribute getRule_Name();

  /**
   * Returns the meta object for the containment reference '{@link ac.soton.theory.xtext.theory.Rule#getRule <em>Rule</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Rule</em>'.
   * @see ac.soton.theory.xtext.theory.Rule#getRule()
   * @see #getRule()
   * @generated
   */
  EReference getRule_Rule();

  /**
   * Returns the meta object for class '{@link ac.soton.theory.xtext.theory.RewriteRule <em>Rewrite Rule</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Rewrite Rule</em>'.
   * @see ac.soton.theory.xtext.theory.RewriteRule
   * @generated
   */
  EClass getRewriteRule();

  /**
   * Returns the meta object for the attribute '{@link ac.soton.theory.xtext.theory.RewriteRule#getPattern <em>Pattern</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Pattern</em>'.
   * @see ac.soton.theory.xtext.theory.RewriteRule#getPattern()
   * @see #getRewriteRule()
   * @generated
   */
  EAttribute getRewriteRule_Pattern();

  /**
   * Returns the meta object for the containment reference '{@link ac.soton.theory.xtext.theory.RewriteRule#getRule <em>Rule</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Rule</em>'.
   * @see ac.soton.theory.xtext.theory.RewriteRule#getRule()
   * @see #getRewriteRule()
   * @generated
   */
  EReference getRewriteRule_Rule();

  /**
   * Returns the meta object for class '{@link ac.soton.theory.xtext.theory.InferenceRule <em>Inference Rule</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Inference Rule</em>'.
   * @see ac.soton.theory.xtext.theory.InferenceRule
   * @generated
   */
  EClass getInferenceRule();

  /**
   * Returns the meta object for the containment reference list '{@link ac.soton.theory.xtext.theory.InferenceRule#getGiven <em>Given</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Given</em>'.
   * @see ac.soton.theory.xtext.theory.InferenceRule#getGiven()
   * @see #getInferenceRule()
   * @generated
   */
  EReference getInferenceRule_Given();

  /**
   * Returns the meta object for the containment reference '{@link ac.soton.theory.xtext.theory.InferenceRule#getInfer <em>Infer</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Infer</em>'.
   * @see ac.soton.theory.xtext.theory.InferenceRule#getInfer()
   * @see #getInferenceRule()
   * @generated
   */
  EReference getInferenceRule_Infer();

  /**
   * Returns the meta object for class '{@link ac.soton.theory.xtext.theory.Given <em>Given</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Given</em>'.
   * @see ac.soton.theory.xtext.theory.Given
   * @generated
   */
  EClass getGiven();

  /**
   * Returns the meta object for the attribute '{@link ac.soton.theory.xtext.theory.Given#getPredicate <em>Predicate</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Predicate</em>'.
   * @see ac.soton.theory.xtext.theory.Given#getPredicate()
   * @see #getGiven()
   * @generated
   */
  EAttribute getGiven_Predicate();

  /**
   * Returns the meta object for the attribute '{@link ac.soton.theory.xtext.theory.Given#isRequired <em>Required</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Required</em>'.
   * @see ac.soton.theory.xtext.theory.Given#isRequired()
   * @see #getGiven()
   * @generated
   */
  EAttribute getGiven_Required();

  /**
   * Returns the meta object for class '{@link ac.soton.theory.xtext.theory.Infer <em>Infer</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Infer</em>'.
   * @see ac.soton.theory.xtext.theory.Infer
   * @generated
   */
  EClass getInfer();

  /**
   * Returns the meta object for the attribute '{@link ac.soton.theory.xtext.theory.Infer#getPredicate <em>Predicate</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Predicate</em>'.
   * @see ac.soton.theory.xtext.theory.Infer#getPredicate()
   * @see #getInfer()
   * @generated
   */
  EAttribute getInfer_Predicate();

  /**
   * Returns the meta object for class '{@link ac.soton.theory.xtext.theory.UnconditionalRewrite <em>Unconditional Rewrite</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Unconditional Rewrite</em>'.
   * @see ac.soton.theory.xtext.theory.UnconditionalRewrite
   * @generated
   */
  EClass getUnconditionalRewrite();

  /**
   * Returns the meta object for the attribute list '{@link ac.soton.theory.xtext.theory.UnconditionalRewrite#getRhs <em>Rhs</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute list '<em>Rhs</em>'.
   * @see ac.soton.theory.xtext.theory.UnconditionalRewrite#getRhs()
   * @see #getUnconditionalRewrite()
   * @generated
   */
  EAttribute getUnconditionalRewrite_Rhs();

  /**
   * Returns the meta object for class '{@link ac.soton.theory.xtext.theory.ConditionalRewrite <em>Conditional Rewrite</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Conditional Rewrite</em>'.
   * @see ac.soton.theory.xtext.theory.ConditionalRewrite
   * @generated
   */
  EClass getConditionalRewrite();

  /**
   * Returns the meta object for the containment reference list '{@link ac.soton.theory.xtext.theory.ConditionalRewrite#getRewrites <em>Rewrites</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Rewrites</em>'.
   * @see ac.soton.theory.xtext.theory.ConditionalRewrite#getRewrites()
   * @see #getConditionalRewrite()
   * @generated
   */
  EReference getConditionalRewrite_Rewrites();

  /**
   * Returns the meta object for class '{@link ac.soton.theory.xtext.theory.ConditionalRewriteRule <em>Conditional Rewrite Rule</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Conditional Rewrite Rule</em>'.
   * @see ac.soton.theory.xtext.theory.ConditionalRewriteRule
   * @generated
   */
  EClass getConditionalRewriteRule();

  /**
   * Returns the meta object for the attribute '{@link ac.soton.theory.xtext.theory.ConditionalRewriteRule#getLsh <em>Lsh</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Lsh</em>'.
   * @see ac.soton.theory.xtext.theory.ConditionalRewriteRule#getLsh()
   * @see #getConditionalRewriteRule()
   * @generated
   */
  EAttribute getConditionalRewriteRule_Lsh();

  /**
   * Returns the meta object for the attribute '{@link ac.soton.theory.xtext.theory.ConditionalRewriteRule#getRhs <em>Rhs</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Rhs</em>'.
   * @see ac.soton.theory.xtext.theory.ConditionalRewriteRule#getRhs()
   * @see #getConditionalRewriteRule()
   * @generated
   */
  EAttribute getConditionalRewriteRule_Rhs();

  /**
   * Returns the meta object for enum '{@link ac.soton.theory.xtext.theory.Notation <em>Notation</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for enum '<em>Notation</em>'.
   * @see ac.soton.theory.xtext.theory.Notation
   * @generated
   */
  EEnum getNotation();

  /**
   * Returns the factory that creates the instances of the model.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the factory that creates the instances of the model.
   * @generated
   */
  TheoryFactory getTheoryFactory();

  /**
   * <!-- begin-user-doc -->
   * Defines literals for the meta objects that represent
   * <ul>
   *   <li>each class,</li>
   *   <li>each feature of each class,</li>
   *   <li>each enum,</li>
   *   <li>and each data type</li>
   * </ul>
   * <!-- end-user-doc -->
   * @generated
   */
  interface Literals
  {
    /**
     * The meta object literal for the '{@link ac.soton.theory.xtext.theory.impl.TheoryImpl <em>Theory</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see ac.soton.theory.xtext.theory.impl.TheoryImpl
     * @see ac.soton.theory.xtext.theory.impl.TheoryPackageImpl#getTheory()
     * @generated
     */
    EClass THEORY = eINSTANCE.getTheory();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute THEORY__NAME = eINSTANCE.getTheory_Name();

    /**
     * The meta object literal for the '<em><b>Parameters</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference THEORY__PARAMETERS = eINSTANCE.getTheory_Parameters();

    /**
     * The meta object literal for the '<em><b>Imports</b></em>' attribute list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute THEORY__IMPORTS = eINSTANCE.getTheory_Imports();

    /**
     * The meta object literal for the '<em><b>Types</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference THEORY__TYPES = eINSTANCE.getTheory_Types();

    /**
     * The meta object literal for the '<em><b>Operators</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference THEORY__OPERATORS = eINSTANCE.getTheory_Operators();

    /**
     * The meta object literal for the '<em><b>Axioms</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference THEORY__AXIOMS = eINSTANCE.getTheory_Axioms();

    /**
     * The meta object literal for the '<em><b>Variables</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference THEORY__VARIABLES = eINSTANCE.getTheory_Variables();

    /**
     * The meta object literal for the '<em><b>Rules</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference THEORY__RULES = eINSTANCE.getTheory_Rules();

    /**
     * The meta object literal for the '{@link ac.soton.theory.xtext.theory.impl.ParameterImpl <em>Parameter</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see ac.soton.theory.xtext.theory.impl.ParameterImpl
     * @see ac.soton.theory.xtext.theory.impl.TheoryPackageImpl#getParameter()
     * @generated
     */
    EClass PARAMETER = eINSTANCE.getParameter();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute PARAMETER__NAME = eINSTANCE.getParameter_Name();

    /**
     * The meta object literal for the '{@link ac.soton.theory.xtext.theory.impl.TypeImpl <em>Type</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see ac.soton.theory.xtext.theory.impl.TypeImpl
     * @see ac.soton.theory.xtext.theory.impl.TheoryPackageImpl#getType()
     * @generated
     */
    EClass TYPE = eINSTANCE.getType();

    /**
     * The meta object literal for the '<em><b>Comments</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute TYPE__COMMENTS = eINSTANCE.getType_Comments();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute TYPE__NAME = eINSTANCE.getType_Name();

    /**
     * The meta object literal for the '<em><b>Parameters</b></em>' reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference TYPE__PARAMETERS = eINSTANCE.getType_Parameters();

    /**
     * The meta object literal for the '<em><b>Constructors</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference TYPE__CONSTRUCTORS = eINSTANCE.getType_Constructors();

    /**
     * The meta object literal for the '{@link ac.soton.theory.xtext.theory.impl.ConstructorImpl <em>Constructor</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see ac.soton.theory.xtext.theory.impl.ConstructorImpl
     * @see ac.soton.theory.xtext.theory.impl.TheoryPackageImpl#getConstructor()
     * @generated
     */
    EClass CONSTRUCTOR = eINSTANCE.getConstructor();

    /**
     * The meta object literal for the '<em><b>Comments</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute CONSTRUCTOR__COMMENTS = eINSTANCE.getConstructor_Comments();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute CONSTRUCTOR__NAME = eINSTANCE.getConstructor_Name();

    /**
     * The meta object literal for the '<em><b>Destructors</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CONSTRUCTOR__DESTRUCTORS = eINSTANCE.getConstructor_Destructors();

    /**
     * The meta object literal for the '{@link ac.soton.theory.xtext.theory.impl.DestructorImpl <em>Destructor</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see ac.soton.theory.xtext.theory.impl.DestructorImpl
     * @see ac.soton.theory.xtext.theory.impl.TheoryPackageImpl#getDestructor()
     * @generated
     */
    EClass DESTRUCTOR = eINSTANCE.getDestructor();

    /**
     * The meta object literal for the '<em><b>Comments</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute DESTRUCTOR__COMMENTS = eINSTANCE.getDestructor_Comments();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute DESTRUCTOR__NAME = eINSTANCE.getDestructor_Name();

    /**
     * The meta object literal for the '<em><b>Type</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute DESTRUCTOR__TYPE = eINSTANCE.getDestructor_Type();

    /**
     * The meta object literal for the '{@link ac.soton.theory.xtext.theory.impl.OperatorImpl <em>Operator</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see ac.soton.theory.xtext.theory.impl.OperatorImpl
     * @see ac.soton.theory.xtext.theory.impl.TheoryPackageImpl#getOperator()
     * @generated
     */
    EClass OPERATOR = eINSTANCE.getOperator();

    /**
     * The meta object literal for the '<em><b>Comments</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute OPERATOR__COMMENTS = eINSTANCE.getOperator_Comments();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute OPERATOR__NAME = eINSTANCE.getOperator_Name();

    /**
     * The meta object literal for the '<em><b>Arguments</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference OPERATOR__ARGUMENTS = eINSTANCE.getOperator_Arguments();

    /**
     * The meta object literal for the '<em><b>Type</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute OPERATOR__TYPE = eINSTANCE.getOperator_Type();

    /**
     * The meta object literal for the '<em><b>Notation</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute OPERATOR__NOTATION = eINSTANCE.getOperator_Notation();

    /**
     * The meta object literal for the '<em><b>Associtive</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute OPERATOR__ASSOCITIVE = eINSTANCE.getOperator_Associtive();

    /**
     * The meta object literal for the '<em><b>Commutative</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute OPERATOR__COMMUTATIVE = eINSTANCE.getOperator_Commutative();

    /**
     * The meta object literal for the '<em><b>Precedent</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute OPERATOR__PRECEDENT = eINSTANCE.getOperator_Precedent();

    /**
     * The meta object literal for the '<em><b>Wd</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute OPERATOR__WD = eINSTANCE.getOperator_Wd();

    /**
     * The meta object literal for the '<em><b>Definition</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute OPERATOR__DEFINITION = eINSTANCE.getOperator_Definition();

    /**
     * The meta object literal for the '<em><b>Case</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute OPERATOR__CASE = eINSTANCE.getOperator_Case();

    /**
     * The meta object literal for the '<em><b>Cases</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference OPERATOR__CASES = eINSTANCE.getOperator_Cases();

    /**
     * The meta object literal for the '{@link ac.soton.theory.xtext.theory.impl.ArgumentImpl <em>Argument</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see ac.soton.theory.xtext.theory.impl.ArgumentImpl
     * @see ac.soton.theory.xtext.theory.impl.TheoryPackageImpl#getArgument()
     * @generated
     */
    EClass ARGUMENT = eINSTANCE.getArgument();

    /**
     * The meta object literal for the '<em><b>Comments</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ARGUMENT__COMMENTS = eINSTANCE.getArgument_Comments();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ARGUMENT__NAME = eINSTANCE.getArgument_Name();

    /**
     * The meta object literal for the '<em><b>Type</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ARGUMENT__TYPE = eINSTANCE.getArgument_Type();

    /**
     * The meta object literal for the '{@link ac.soton.theory.xtext.theory.impl.CaseImpl <em>Case</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see ac.soton.theory.xtext.theory.impl.CaseImpl
     * @see ac.soton.theory.xtext.theory.impl.TheoryPackageImpl#getCase()
     * @generated
     */
    EClass CASE = eINSTANCE.getCase();

    /**
     * The meta object literal for the '<em><b>Pattern</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute CASE__PATTERN = eINSTANCE.getCase_Pattern();

    /**
     * The meta object literal for the '<em><b>Formula</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute CASE__FORMULA = eINSTANCE.getCase_Formula();

    /**
     * The meta object literal for the '{@link ac.soton.theory.xtext.theory.impl.AxiomImpl <em>Axiom</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see ac.soton.theory.xtext.theory.impl.AxiomImpl
     * @see ac.soton.theory.xtext.theory.impl.TheoryPackageImpl#getAxiom()
     * @generated
     */
    EClass AXIOM = eINSTANCE.getAxiom();

    /**
     * The meta object literal for the '<em><b>Comments</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute AXIOM__COMMENTS = eINSTANCE.getAxiom_Comments();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute AXIOM__NAME = eINSTANCE.getAxiom_Name();

    /**
     * The meta object literal for the '<em><b>Predicate</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute AXIOM__PREDICATE = eINSTANCE.getAxiom_Predicate();

    /**
     * The meta object literal for the '<em><b>Is Theorem</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute AXIOM__IS_THEOREM = eINSTANCE.getAxiom_IsTheorem();

    /**
     * The meta object literal for the '{@link ac.soton.theory.xtext.theory.impl.VariableImpl <em>Variable</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see ac.soton.theory.xtext.theory.impl.VariableImpl
     * @see ac.soton.theory.xtext.theory.impl.TheoryPackageImpl#getVariable()
     * @generated
     */
    EClass VARIABLE = eINSTANCE.getVariable();

    /**
     * The meta object literal for the '<em><b>Comments</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute VARIABLE__COMMENTS = eINSTANCE.getVariable_Comments();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute VARIABLE__NAME = eINSTANCE.getVariable_Name();

    /**
     * The meta object literal for the '<em><b>Type</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute VARIABLE__TYPE = eINSTANCE.getVariable_Type();

    /**
     * The meta object literal for the '{@link ac.soton.theory.xtext.theory.impl.RuleImpl <em>Rule</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see ac.soton.theory.xtext.theory.impl.RuleImpl
     * @see ac.soton.theory.xtext.theory.impl.TheoryPackageImpl#getRule()
     * @generated
     */
    EClass RULE = eINSTANCE.getRule();

    /**
     * The meta object literal for the '<em><b>Comments</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute RULE__COMMENTS = eINSTANCE.getRule_Comments();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute RULE__NAME = eINSTANCE.getRule_Name();

    /**
     * The meta object literal for the '<em><b>Rule</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference RULE__RULE = eINSTANCE.getRule_Rule();

    /**
     * The meta object literal for the '{@link ac.soton.theory.xtext.theory.impl.RewriteRuleImpl <em>Rewrite Rule</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see ac.soton.theory.xtext.theory.impl.RewriteRuleImpl
     * @see ac.soton.theory.xtext.theory.impl.TheoryPackageImpl#getRewriteRule()
     * @generated
     */
    EClass REWRITE_RULE = eINSTANCE.getRewriteRule();

    /**
     * The meta object literal for the '<em><b>Pattern</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute REWRITE_RULE__PATTERN = eINSTANCE.getRewriteRule_Pattern();

    /**
     * The meta object literal for the '<em><b>Rule</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference REWRITE_RULE__RULE = eINSTANCE.getRewriteRule_Rule();

    /**
     * The meta object literal for the '{@link ac.soton.theory.xtext.theory.impl.InferenceRuleImpl <em>Inference Rule</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see ac.soton.theory.xtext.theory.impl.InferenceRuleImpl
     * @see ac.soton.theory.xtext.theory.impl.TheoryPackageImpl#getInferenceRule()
     * @generated
     */
    EClass INFERENCE_RULE = eINSTANCE.getInferenceRule();

    /**
     * The meta object literal for the '<em><b>Given</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference INFERENCE_RULE__GIVEN = eINSTANCE.getInferenceRule_Given();

    /**
     * The meta object literal for the '<em><b>Infer</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference INFERENCE_RULE__INFER = eINSTANCE.getInferenceRule_Infer();

    /**
     * The meta object literal for the '{@link ac.soton.theory.xtext.theory.impl.GivenImpl <em>Given</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see ac.soton.theory.xtext.theory.impl.GivenImpl
     * @see ac.soton.theory.xtext.theory.impl.TheoryPackageImpl#getGiven()
     * @generated
     */
    EClass GIVEN = eINSTANCE.getGiven();

    /**
     * The meta object literal for the '<em><b>Predicate</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute GIVEN__PREDICATE = eINSTANCE.getGiven_Predicate();

    /**
     * The meta object literal for the '<em><b>Required</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute GIVEN__REQUIRED = eINSTANCE.getGiven_Required();

    /**
     * The meta object literal for the '{@link ac.soton.theory.xtext.theory.impl.InferImpl <em>Infer</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see ac.soton.theory.xtext.theory.impl.InferImpl
     * @see ac.soton.theory.xtext.theory.impl.TheoryPackageImpl#getInfer()
     * @generated
     */
    EClass INFER = eINSTANCE.getInfer();

    /**
     * The meta object literal for the '<em><b>Predicate</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute INFER__PREDICATE = eINSTANCE.getInfer_Predicate();

    /**
     * The meta object literal for the '{@link ac.soton.theory.xtext.theory.impl.UnconditionalRewriteImpl <em>Unconditional Rewrite</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see ac.soton.theory.xtext.theory.impl.UnconditionalRewriteImpl
     * @see ac.soton.theory.xtext.theory.impl.TheoryPackageImpl#getUnconditionalRewrite()
     * @generated
     */
    EClass UNCONDITIONAL_REWRITE = eINSTANCE.getUnconditionalRewrite();

    /**
     * The meta object literal for the '<em><b>Rhs</b></em>' attribute list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute UNCONDITIONAL_REWRITE__RHS = eINSTANCE.getUnconditionalRewrite_Rhs();

    /**
     * The meta object literal for the '{@link ac.soton.theory.xtext.theory.impl.ConditionalRewriteImpl <em>Conditional Rewrite</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see ac.soton.theory.xtext.theory.impl.ConditionalRewriteImpl
     * @see ac.soton.theory.xtext.theory.impl.TheoryPackageImpl#getConditionalRewrite()
     * @generated
     */
    EClass CONDITIONAL_REWRITE = eINSTANCE.getConditionalRewrite();

    /**
     * The meta object literal for the '<em><b>Rewrites</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CONDITIONAL_REWRITE__REWRITES = eINSTANCE.getConditionalRewrite_Rewrites();

    /**
     * The meta object literal for the '{@link ac.soton.theory.xtext.theory.impl.ConditionalRewriteRuleImpl <em>Conditional Rewrite Rule</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see ac.soton.theory.xtext.theory.impl.ConditionalRewriteRuleImpl
     * @see ac.soton.theory.xtext.theory.impl.TheoryPackageImpl#getConditionalRewriteRule()
     * @generated
     */
    EClass CONDITIONAL_REWRITE_RULE = eINSTANCE.getConditionalRewriteRule();

    /**
     * The meta object literal for the '<em><b>Lsh</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute CONDITIONAL_REWRITE_RULE__LSH = eINSTANCE.getConditionalRewriteRule_Lsh();

    /**
     * The meta object literal for the '<em><b>Rhs</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute CONDITIONAL_REWRITE_RULE__RHS = eINSTANCE.getConditionalRewriteRule_Rhs();

    /**
     * The meta object literal for the '{@link ac.soton.theory.xtext.theory.Notation <em>Notation</em>}' enum.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see ac.soton.theory.xtext.theory.Notation
     * @see ac.soton.theory.xtext.theory.impl.TheoryPackageImpl#getNotation()
     * @generated
     */
    EEnum NOTATION = eINSTANCE.getNotation();

  }

} //TheoryPackage
